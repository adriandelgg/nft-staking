/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelledSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListedForSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Purchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toSeller",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "cancelMultipleNFTSales",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "cancelNFTSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "purchaseNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
    ],
    name: "sellMultipleNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "sellNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setERC20Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setFeeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensForSale",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNFTContracts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    name: "unwhitelistNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    name: "whitelistNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aee38038062001aee8339810160408190526200003491620000ec565b600160005562000044336200007d565b600280546001600160a01b039485166001600160a01b03199182161790915560038054939094169216919091179091556004556200012d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e757600080fd5b919050565b6000806000606084860312156200010257600080fd5b6200010d84620000cf565b92506200011d60208501620000cf565b9150604084015190509250925092565b6119b1806200013d6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638a13eea7116100de578063bc197c8111610097578063de56248711610071578063de562487146103b8578063f23a6e61146103cb578063f2fde38b146103ea578063f779a193146103fd57600080fd5b8063bc197c811461035a578063c415b95c14610392578063dc99102a146103a557600080fd5b80638a13eea71461028b5780638da5cb5b1461029e57806399a5d747146102af578063a1201266146102d7578063a42dce8014610334578063a87e25ac1461034757600080fd5b806369e154041161013057806369e154041461022b5780636b392680146102425780636e88b12d14610255578063715018a61461025d578063730889ab1461026557806387a462201461027857600080fd5b806301ffc9a7146101785780630bb4d82a146101a057806333b0b8fb146101cb5780633af32abf146101e0578063578a9df41461020357806364ad896714610218575b600080fd5b61018b61018636600461130e565b610410565b60405190151581526020015b60405180910390f35b6101b36101ae36600461133f565b610447565b6040516001600160a01b039091168152602001610197565b6101d3610471565b6040516101979190611358565b61018b6101ee3660046113c1565b60066020526000908152604090205460ff1681565b610216610211366004611428565b6104d3565b005b6102166102263660046113c1565b6106b4565b61023460045481565b604051908152602001610197565b61021661025036600461133f565b610851565b600554610234565b610216610880565b6102166102733660046114a9565b6108b6565b6102166102863660046114d3565b610a2b565b6002546101b3906001600160a01b031681565b6001546001600160a01b03166101b3565b6102c26102bd36600461133f565b610be8565b60408051928352602083019190915201610197565b6103156102e53660046114a9565b6007602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610197565b6102166103423660046113c1565b610c18565b6102166103553660046114a9565b610c64565b61037961036836600461165d565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610197565b6003546101b3906001600160a01b031681565b6102166103b33660046113c1565b610f63565b6102166103c63660046113c1565b611069565b6103796103d9366004611707565b63f23a6e6160e01b95945050505050565b6102166103f83660046113c1565b6110b5565b61021661040b36600461176c565b611150565b60006001600160e01b03198216630271189760e51b148061044157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6005818154811061045757600080fd5b6000918252602090912001546001600160a01b0316905081565b606060058054806020026020016040519081016040528092919081815260200182805480156104c957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104ab575b5050505050905090565b3360009081526006602052604090205460ff1661050b5760405162461bcd60e51b81526004016105029061179f565b60405180910390fd5b3360005b848110156106ab57600086868381811061052b5761052b6117e7565b9050602002013590506000858584818110610548576105486117e7565b604051627eeac760e11b815230600482015260248101869052602090910292909201359250506001600160a01b0385169062fdd58e90604401602060405180830381865afa15801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c291906117fd565b6001146106095760405162461bcd60e51b8152602060048201526015602482015274151bdad95b88151c985b9cd9995c8811985a5b1959605a1b6044820152606401610502565b6040805180820182526001600160a01b038b81168083526020808401868152336000818152600784528781208a82528452879020955186546001600160a01b03191695169490941785555160019094019390935583518681529283018590529290917f3e005bcfab475d291f8852b3c637091a4aedde88fe407b0beefe79917aa44e04910160405180910390a3505080806106a39061182c565b91505061050f565b50505050505050565b6001546001600160a01b031633146106de5760405162461bcd60e51b815260040161050290611847565b6000600580548060200260200160405190810160405280929190818152602001828054801561073657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610718575b5050505050905060005b815181101561082e57826001600160a01b0316828281518110610765576107656117e7565b60200260200101516001600160a01b0316141561081c57816001835161078b919061187c565b8151811061079b5761079b6117e7565b6020026020010151600582815481106107b6576107b66117e7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806107f5576107f5611893565b600082815260209020810160001990810180546001600160a01b031916905501905561082e565b806108268161182c565b915050610740565b50506001600160a01b03166000908152600660205260409020805460ff19169055565b6001546001600160a01b0316331461087b5760405162461bcd60e51b815260040161050290611847565b600455565b6001546001600160a01b031633146108aa5760405162461bcd60e51b815260040161050290611847565b6108b460006112bc565b565b600260005414156108d95760405162461bcd60e51b8152600401610502906118a9565b600260009081556001600160a01b038381168252600760209081526040808420858552909152909120541633146109525760405162461bcd60e51b815260206004820152601b60248201527f596f7520617265206e6f7420746865204e46542073656c6c65722e00000000006044820152606401610502565b604051637921219560e11b81526001600160a01b0383169063f242432a90610985903090339086906001906004016118e0565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050506001600160a01b0382166000818152600760209081526040808320858452825280832080546001600160a01b03191681556001019290925590518381523392917fa0c45619072d284bcc0252cbc47031bb3089515de601f4461df162bef73e2671910160405180910390a350506001600055565b60026000541415610a4e5760405162461bcd60e51b8152600401610502906118a9565b6002600090815583905b82811015610bdc576000848483818110610a7457610a746117e7565b6001600160a01b0389811660009081526007602090815260408083209482029690960135808352939052939093205490935090911633149050610af95760405162461bcd60e51b815260206004820152601b60248201527f596f7520617265206e6f7420746865204e46542073656c6c65722e00000000006044820152606401610502565b604051637921219560e11b81526001600160a01b0384169063f242432a90610b2c903090339086906001906004016118e0565b600060405180830381600087803b158015610b4657600080fd5b505af1158015610b5a573d6000803e3d6000fd5b505050506001600160a01b0386166000818152600760209081526040808320858452825280832080546001600160a01b03191681556001019290925590518381523392917fa0c45619072d284bcc0252cbc47031bb3089515de601f4461df162bef73e2671910160405180910390a35080610bd48161182c565b915050610a58565b50506001600055505050565b600080606460045484610bfb9190611918565b610c059190611937565b9150610c11828461187c565b9050915091565b6001546001600160a01b03163314610c425760405162461bcd60e51b815260040161050290611847565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60026000541415610c875760405162461bcd60e51b8152600401610502906118a9565b600260009081556001600160a01b0380841682526007602090815260408084208585528252928390208351808501909452805490921680845260019092015490830152331415610d195760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e204e4f542062757920796f7572206f776e204e4654000000006044820152606401610502565b80516001600160a01b0316610d665760405162461bcd60e51b81526020600482015260136024820152724e4654206973206e6f7420666f722073616c6560681b6044820152606401610502565b600080610d768360200151610be8565b604051637921219560e11b815291935091506001600160a01b0386169063f242432a90610dae903090339089906001906004016118e0565b600060405180830381600087803b158015610dc857600080fd5b505af1158015610ddc573d6000803e3d6000fd5b50506002546003546040516323b872dd60e01b81523360048201526001600160a01b03918216602482015260448101879052911692506323b872dd91506064016020604051808303816000875af1158015610e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5f9190611959565b5060025483516040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede9190611959565b506001600160a01b038581166000818152600760209081526040808320898452825280832080546001600160a01b03191681556001019290925586518782015183518a81529283015233941692917f10489d00e99dad847cfdaebcd4f071ab10fb364134b113d0c9cdfbfeda19b126910160405180910390a450506001600055505050565b6001546001600160a01b03163314610f8d5760405162461bcd60e51b815260040161050290611847565b6001600160a01b03811660009081526006602052604090205460ff16156110025760405162461bcd60e51b815260206004820152602360248201527f4e465420636f6e747261637420697320616c72656164792077686974656c69736044820152621d195960ea1b6064820152608401610502565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b039093166001600160a01b031990931683179055600091825260066020526040909120805460ff19169091179055565b6001546001600160a01b031633146110935760405162461bcd60e51b815260040161050290611847565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146110df5760405162461bcd60e51b815260040161050290611847565b6001600160a01b0381166111445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610502565b61114d816112bc565b50565b3360009081526006602052604090205460ff1661117f5760405162461bcd60e51b81526004016105029061179f565b604051627eeac760e11b815230600482015260248101839052339062fdd58e90604401602060405180830381865afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e391906117fd565b60011461122a5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b88151c985b9cd9995c8811985a5b1959605a1b6044820152606401610502565b6040805180820182526001600160a01b038581168083526020808401868152336000818152600784528781208a82528452879020955186546001600160a01b03191695169490941785555160019094019390935583518681529283018590529290917f3e005bcfab475d291f8852b3c637091a4aedde88fe407b0beefe79917aa44e04910160405180910390a3505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561132057600080fd5b81356001600160e01b03198116811461133857600080fd5b9392505050565b60006020828403121561135157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156113995783516001600160a01b031683529284019291840191600101611374565b50909695505050505050565b80356001600160a01b03811681146113bc57600080fd5b919050565b6000602082840312156113d357600080fd5b611338826113a5565b60008083601f8401126113ee57600080fd5b50813567ffffffffffffffff81111561140657600080fd5b6020830191508360208260051b850101111561142157600080fd5b9250929050565b60008060008060006060868803121561144057600080fd5b611449866113a5565b9450602086013567ffffffffffffffff8082111561146657600080fd5b61147289838a016113dc565b9096509450604088013591508082111561148b57600080fd5b50611498888289016113dc565b969995985093965092949392505050565b600080604083850312156114bc57600080fd5b6114c5836113a5565b946020939093013593505050565b6000806000604084860312156114e857600080fd5b6114f1846113a5565b9250602084013567ffffffffffffffff81111561150d57600080fd5b611519868287016113dc565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561156557611565611526565b604052919050565b600082601f83011261157e57600080fd5b8135602067ffffffffffffffff82111561159a5761159a611526565b8160051b6115a982820161153c565b92835284810182019282810190878511156115c357600080fd5b83870192505b848310156115e2578235825291830191908301906115c9565b979650505050505050565b600082601f8301126115fe57600080fd5b813567ffffffffffffffff81111561161857611618611526565b61162b601f8201601f191660200161153c565b81815284602083860101111561164057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561167557600080fd5b61167e866113a5565b945061168c602087016113a5565b9350604086013567ffffffffffffffff808211156116a957600080fd5b6116b589838a0161156d565b945060608801359150808211156116cb57600080fd5b6116d789838a0161156d565b935060808801359150808211156116ed57600080fd5b506116fa888289016115ed565b9150509295509295909350565b600080600080600060a0868803121561171f57600080fd5b611728866113a5565b9450611736602087016113a5565b93506040860135925060608601359150608086013567ffffffffffffffff81111561176057600080fd5b6116fa888289016115ed565b60008060006060848603121561178157600080fd5b61178a846113a5565b95602085013595506040909401359392505050565b60208082526028908201527f4e465420636f6e74726163742061646472657373206973206e6f742077686974604082015267656c69737465642160c01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561180f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561184057611840611816565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561188e5761188e611816565b500390565b634e487b7160e01b600052603160045260246000fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600081600019048311821515161561193257611932611816565b500290565b60008261195457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561196b57600080fd5b8151801515811461133857600080fdfea26469706673582212207328652d41a18f7e70a83bb51921753447901f9a89d7626bd6eb590968e9581664736f6c634300080a0033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _erc20Token: string,
    _feeCollector: string,
    _feeAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(
      _erc20Token,
      _feeCollector,
      _feeAmount,
      overrides || {}
    ) as Promise<Marketplace>;
  }
  getDeployTransaction(
    _erc20Token: string,
    _feeCollector: string,
    _feeAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20Token,
      _feeCollector,
      _feeAmount,
      overrides || {}
    );
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
