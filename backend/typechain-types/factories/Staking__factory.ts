/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc20Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokensPerBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "NFTStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "NFTUnStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toBlock",
        type: "uint256",
      },
    ],
    name: "StakePayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerBlock",
        type: "uint256",
      },
    ],
    name: "StakeRewardUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "erc20Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAllNFTsUserStaked",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftToken",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "receipt",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakedFromBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setERC20Contract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
    ],
    name: "setNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "stakeMultipleNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNFTsStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "totalNFTsUserStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "unstakeMultipleNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokensPerBlock",
        type: "uint256",
      },
    ],
    name: "updateStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewardsNoArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cfd38038062001cfd83398101604081905262000034916200012c565b60016000556200004433620000bd565b600280546001600160a01b038086166001600160a01b031992831617909255600380549285169290911691909117905560048190556040517f8299c7e9ca8ced629afb284155951141eded288b72d7d6b56cb24fbf999a9dfc90620000ac9083815260200190565b60405180910390a15050506200016d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200012757600080fd5b919050565b6000806000606084860312156200014257600080fd5b6200014d846200010f565b92506200015d602085016200010f565b9150604084015190509250925092565b611b80806200017d6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063a7ccabdf116100c3578063d06fcba81161007c578063d06fcba81461034b578063e4022f2a1461035e578063e4928ff414610366578063f23a6e6114610379578063f2fde38b14610398578063f7060048146103ab57600080fd5b8063a7ccabdf146102bf578063b13270d5146102d2578063bc197c81146102e5578063bf8f02181461031d578063c1dfa0bb14610325578063cac8d5381461033857600080fd5b8063715018a611610115578063715018a614610200578063788074ec146102085780638a13eea7146102115780638da5cb5b1461023c5780639e5c38be1461024d578063a2aa43371461026d57600080fd5b806301ffc9a71461015d5780630e9eea6f146101855780631a1cb01f146101bc5780632226acaa146101c557806330bd9e21146101da5780635c335f07146101ed575b600080fd5b61017061016b3660046114ef565b6103be565b60405190151581526020015b60405180910390f35b6101ae61019336600461153c565b6001600160a01b031660009081526007602052604090205490565b60405190815260200161017c565b6101ae60045481565b6101d86101d33660046115a3565b6103f5565b005b6101d86101e83660046115e5565b610686565b6101d86101fb3660046115a3565b610859565b6101d86108f5565b6101ae60055481565b600354610224906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b6001546001600160a01b0316610224565b61026061025b36600461153c565b61092b565b60405161017c9190611673565b6102a061027b366004611686565b600660205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161017c565b6101d86102cd36600461153c565b610997565b6101d86102e036600461169f565b6109e3565b6103046102f3366004611800565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161017c565b6101ae610b73565b6101d8610333366004611686565b610be5565b6101d861034636600461153c565b610e04565b600254610224906001600160a01b031681565b6101d8610e50565b6101d8610374366004611686565b610f4a565b6103046103873660046118aa565b63f23a6e6160e01b95945050505050565b6101d86103a636600461153c565b610faf565b6101ae6103b936600461169f565b61104a565b60006001600160e01b03198216630271189760e51b14806103ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600260005414156104215760405162461bcd60e51b81526004016104189061190f565b60405180910390fd5b600260009081558167ffffffffffffffff811115610441576104416116c9565b60405190808252806020026020018201604052801561046a578160200160208202803683370190505b503360009081526007602052604081209192505b838110156105f657600085858381811061049a5761049a611946565b9050602002013590506104ac8161107b565b6104b581611227565b6104be816112ad565b60018483815181106104d2576104d2611946565b60200260200101818152505060005b8354811015610596578381815481106104fc576104fc611946565b9060005260206000200154821415610584578354849061051e90600190611972565b8154811061052e5761052e611946565b906000526020600020015484828154811061054b5761054b611946565b90600052602060002001819055508380548061056957610569611989565b60019003818190600052602060002001600090559055610596565b8061058e8161199f565b9150506104e1565b506000818152600660209081526040918290206001015482518481529182015233917fd8db7bae94b2583013bad633657a80aab4b97994705848fe61451ddcf5a054aa910160405180910390a250806105ee8161199f565b91505061047e565b50600254604051631759616b60e11b81526001600160a01b0390911690632eb2c2d69061062f90309033908990899089906004016119ba565b600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b5050505083839050600560008282546106769190611972565b9091555050600160005550505050565b6002546001600160a01b031633146106b05760405162461bcd60e51b815260040161041890611a3e565b60005b818110156108395760008383838181106106cf576106cf611946565b600254604051627eeac760e11b815230600482015260209290920293909301356024820181905293506001600160a01b039092169162fdd58e9150604401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190611a8c565b60011461079d5760405162461bcd60e51b815260206004820152601c60248201527f5374616b653a20546f6b656e205472616e73666572204661696c6564000000006044820152606401610418565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b038a16908117825543600192830181905581865260078552838620805493840181558652948490209091018590558151858152928301939093527f36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39910160405180910390a250806108318161199f565b9150506106b3565b50818190506005600082825461084f9190611aa5565b9091555050505050565b6002600054141561087c5760405162461bcd60e51b81526004016104189061190f565b600260009081555b818110156108eb5760008383838181106108a0576108a0611946565b9050602002013590506108b28161107b565b6108bb81611227565b6108c4816112ad565b600090815260066020526040902043600190910155806108e38161199f565b915050610884565b5050600160005550565b6001546001600160a01b0316331461091f5760405162461bcd60e51b815260040161041890611abd565b610929600061149d565b565b6001600160a01b03811660009081526007602090815260409182902080548351818402810184019094528084526060939283018282801561098b57602002820191906000526020600020905b815481526020019060010190808311610977575b50505050509050919050565b6001546001600160a01b031633146109c15760405162461bcd60e51b815260040161041890611abd565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610a0d5760405162461bcd60e51b815260040161041890611a3e565b600254604051627eeac760e11b8152306004820152602481018390526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611a8c565b600114610acd5760405162461bcd60e51b815260206004820152601c60248201527f5374616b653a20546f6b656e205472616e73666572204661696c6564000000006044820152606401610418565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b038716908117825543600192830155845260078352908320805491820181558352908220018290556005805491610b278361199f565b9091555050604080518281524360208201526001600160a01b038416917f36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39910160405180910390a25050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be09190611a8c565b905090565b60026000541415610c085760405162461bcd60e51b81526004016104189061190f565b6002600055610c168161107b565b610c1f81611227565b610c28816112ad565b33600090815260076020908152604080832080548251818502810185019093528083529192909190830182828015610c7f57602002820191906000526020600020905b815481526020019060010190808311610c6b575b5050505050905060005b8151811015610d655782828281518110610ca557610ca5611946565b60200260200101511415610d53578160018351610cc29190611972565b81518110610cd257610cd2611946565b602002602001015160076000336001600160a01b03166001600160a01b031681526020019081526020016000208281548110610d1057610d10611946565b6000918252602080832090910192909255338152600790915260409020805480610d3c57610d3c611989565b600190038181906000526020600020016000905590555b80610d5d8161199f565b915050610c89565b50600254604051637921219560e11b8152306004820152336024820152604481018490526001606482015260a06084820152600060a48201526001600160a01b039091169063f242432a9060c401600060405180830381600087803b158015610dcd57600080fd5b505af1158015610de1573d6000803e3d6000fd5b505060058054925090506000610df683611af2565b909155505060016000555050565b6001546001600160a01b03163314610e2e5760405162461bcd60e51b815260040161041890611abd565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60026000541415610e735760405162461bcd60e51b81526004016104189061190f565b6002600090815533815260076020908152604080832080548251818502810185019093528083529192909190830182828015610ece57602002820191906000526020600020905b815481526020019060010190808311610eba575b5050505050905060005b8151811015610f41576000828281518110610ef557610ef5611946565b60200260200101519050610f088161107b565b610f1181611227565b610f1a816112ad565b60009081526006602052604090204360019091015580610f398161199f565b915050610ed8565b50506001600055565b6001546001600160a01b03163314610f745760405162461bcd60e51b815260040161041890611abd565b60048190556040518181527f8299c7e9ca8ced629afb284155951141eded288b72d7d6b56cb24fbf999a9dfc9060200160405180910390a150565b6001546001600160a01b03163314610fd95760405162461bcd60e51b815260040161041890611abd565b6001600160a01b03811661103e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610418565b6110478161149d565b50565b6007602052816000526040600020818154811061106657600080fd5b90600052602060002001600091509150505481565b600254604051627eeac760e11b8152306004820152602481018390526001600160a01b039091169062fdd58e90604401602060405180830381865afa1580156110c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ec9190611a8c565b6001146111515760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c795374616b65723a20436f6e7472616374206973206e6f74206f776e6560448201526c1c881bd9881d1a1a5cc8139195609a1b6064820152608401610418565b6000818152600660205260409020600101546111af5760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c795374616b65723a20546f6b656e206973206e6f74207374616b6564006044820152606401610418565b6000818152600660205260409020546001600160a01b031633146110475760405162461bcd60e51b815260206004820152602960248201527f6f6e6c795374616b65723a2043616c6c6572206973206e6f74204e465420737460448201526830b5b29037bbb732b960b91b6064820152608401610418565b60008181526006602052604090206001015443116110475760405162461bcd60e51b815260206004820152603f60248201527f7265717569726554696d65456c61707365643a2043616e206e6f74207374616b60448201527f652f756e5374616b652f6861727665737420696e2073616d6520626c6f636b006064820152608401610418565b6000818152600660209081526040808320815180830190925280546001600160a01b031682526001908101549282018390529092916112ec9043611972565b6112f69190611972565b90506000600454826113089190611b09565b6003546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113799190611a8c565b10156113d2576020808401516040805187815260009381019390935282015243606082015233907f7e8de6a1e6682f9d48e1dca794f42aa811c7a6515c3e9bf64713fd7ece9e8e139060800160405180910390a2611497565b600354835160405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015611426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144a9190611b28565b506020808401516040805187815292830184905282015243606082015233907f7e8de6a1e6682f9d48e1dca794f42aa811c7a6515c3e9bf64713fd7ece9e8e139060800160405180910390a25b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561150157600080fd5b81356001600160e01b03198116811461151957600080fd5b9392505050565b80356001600160a01b038116811461153757600080fd5b919050565b60006020828403121561154e57600080fd5b61151982611520565b60008083601f84011261156957600080fd5b50813567ffffffffffffffff81111561158157600080fd5b6020830191508360208260051b850101111561159c57600080fd5b9250929050565b600080602083850312156115b657600080fd5b823567ffffffffffffffff8111156115cd57600080fd5b6115d985828601611557565b90969095509350505050565b6000806000604084860312156115fa57600080fd5b61160384611520565b9250602084013567ffffffffffffffff81111561161f57600080fd5b61162b86828701611557565b9497909650939450505050565b600081518084526020808501945080840160005b838110156116685781518752958201959082019060010161164c565b509495945050505050565b6020815260006115196020830184611638565b60006020828403121561169857600080fd5b5035919050565b600080604083850312156116b257600080fd5b6116bb83611520565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611708576117086116c9565b604052919050565b600082601f83011261172157600080fd5b8135602067ffffffffffffffff82111561173d5761173d6116c9565b8160051b61174c8282016116df565b928352848101820192828101908785111561176657600080fd5b83870192505b848310156117855782358252918301919083019061176c565b979650505050505050565b600082601f8301126117a157600080fd5b813567ffffffffffffffff8111156117bb576117bb6116c9565b6117ce601f8201601f19166020016116df565b8181528460208386010111156117e357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561181857600080fd5b61182186611520565b945061182f60208701611520565b9350604086013567ffffffffffffffff8082111561184c57600080fd5b61185889838a01611710565b9450606088013591508082111561186e57600080fd5b61187a89838a01611710565b9350608088013591508082111561189057600080fd5b5061189d88828901611790565b9150509295509295909350565b600080600080600060a086880312156118c257600080fd5b6118cb86611520565b94506118d960208701611520565b93506040860135925060608601359150608086013567ffffffffffffffff81111561190357600080fd5b61189d88828901611790565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156119845761198461195c565b500390565b634e487b7160e01b600052603160045260246000fd5b60006000198214156119b3576119b361195c565b5060010190565b6001600160a01b0386811682528516602082015260a060408201819052810183905260006001600160fb1b038411156119f257600080fd5b8360051b808660c0850137808301905060c081016000815260c0848303016060850152611a1f8186611638565b8481036080909501949094525050600082525060200195945050505050565b6020808252602e908201527f5374616b653a2043616c6c65722063616e206f6e6c792062652074686520455260408201526d10cc4c4d4d4818dbdb9d1c9858dd60921b606082015260800190565b600060208284031215611a9e57600080fd5b5051919050565b60008219821115611ab857611ab861195c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600081611b0157611b0161195c565b506000190190565b6000816000190483118215151615611b2357611b2361195c565b500290565b600060208284031215611b3a57600080fd5b8151801515811461151957600080fdfea2646970667358221220cbfda1d27b02c024f617171c4eb852e12da8da02bf6a745f225db85ad444f3bb64736f6c634300080a0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _nftToken: string,
    _erc20Token: string,
    _tokensPerBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _nftToken,
      _erc20Token,
      _tokensPerBlock,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _nftToken: string,
    _erc20Token: string,
    _tokensPerBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftToken,
      _erc20Token,
      _tokensPerBlock,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
